{"version":3,"sources":["../example.js"],"names":["express","require","buildSchema","graphqlHTTP","port","schema","root","postTitle","blogTitle","app","use","rootValue","graphiql","listen","console","log"],"mappings":"AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAM,EAAEC,WAAF,KAAkBD,QAAQ,SAAR,CAAxB;AACA,MAAM,EAACE,WAAD,KAAgBF,QAAQ,iBAAR,CAAtB;AACA,IAAIG,OAAO,IAAX;;AAEA;;;AAGA,IAAIC,SAASH,YAAa;;;;;CAAb,CAAb;;AAOA;;;AAGA,IAAII,OAAO;AACTC,aAAW,MAAM;AACf,WAAO,uDAAP;AACD,GAHQ;AAITC,aAAW,MAAM;AACf,WAAO,WAAP;AACD;AANQ,CAAX;;AASA,MAAMC,MAAMT,SAAZ;AACAS,IAAIC,GAAJ,CAAQ,GAAR,EAAaP,YAAY;AACvBE,UAAQA,MADe;AAEvBM,aAAWL,IAFY;AAGvBM,YAAU,IAHa,CAGR;AAHQ,CAAZ,CAAb,E,CAIiB;AACA;;AAEjBH,IAAII,MAAJ,CAAWT,IAAX;AACAU,QAAQC,GAAR,CAAY,8CAA8CX,IAA1D","file":"example.js","sourcesContent":["const express = require('express');\nconst { buildSchema } = require('graphql');\nconst {graphqlHTTP} = require('express-graphql');\nlet port = 4000;\n\n/*  Это простая схема построенная с использванием\n    языка схемы GraphQL */\n\nlet schema = buildSchema(`\n  type Query {\n    postTitle: String,\n    blogTitle: String\n  }\n`);\n\n/* root предоставляет функции распознования для каждого\n   endpoint'a */\n\nlet root = {\n  postTitle: () => {\n    return 'Build a Simple GraphQL Server With Express and NodeJS';\n  },\n  blogTitle: () => {\n    return 'scotch.io';\n  }\n};\n\nconst app = express();\napp.use('/', graphqlHTTP({\n  schema: schema,\n  rootValue: root,\n  graphiql: true // Если true, то отображает GraphiQL\n}));             // (браузерная IDE для создания и выполненения запросов к endpoint'ам),\n                 // когда endpoint'ы GraphQL были загружены   \n\napp.listen(port);\nconsole.log('GraphQL API server running at localhost: ' + port);"]}