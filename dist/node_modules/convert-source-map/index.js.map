{"version":3,"sources":["../../../node_modules/convert-source-map/index.js"],"names":["fs","require","path","SafeBuffer","Object","defineProperty","exports","get","getCommentRegex","getMapFileCommentRegex","decodeBase64","base64","Buffer","from","toString","stripComment","sm","split","pop","readFromFileMap","dir","r","mapFileCommentRegex","exec","filename","filepath","resolve","readFileSync","e","Error","Converter","opts","isFileComment","commentFileDir","hasComment","isEncoded","isJSON","JSON","parse","sourcemap","prototype","toJSON","space","stringify","toBase64","json","toComment","options","data","multiline","toObject","addProperty","key","value","hasOwnProperty","setProperty","getProperty","fromObject","obj","fromJSON","fromBase64","fromComment","comment","replace","fromMapFileComment","fromSource","content","m","match","commentRegex","fromMapFileSource","removeComments","src","removeMapFileComments","generateMapFileComment","file"],"mappings":"AAAA;;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,aAAaF,QAAQ,aAAR,CAAjB;;AAEAG,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,cAA/B,EAA+C;AAC7CC,OAAK,SAASC,eAAT,GAA4B;AAC/B,WAAO;AAAP;AACD;AAH4C,CAA/C;;AAMAJ,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,qBAA/B,EAAsD;AACpDC,OAAK,SAASE,sBAAT,GAAmC;AACtC;AACA,WAAO;AAAP;AACD;AAJmD,CAAtD;;AAQA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,SAAOR,WAAWS,MAAX,CAAkBC,IAAlB,CAAuBF,MAAvB,EAA+B,QAA/B,EAAyCG,QAAzC,EAAP;AACD;;AAED,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACxB,SAAOA,GAAGC,KAAH,CAAS,GAAT,EAAcC,GAAd,EAAP;AACD;;AAED,SAASC,eAAT,CAAyBH,EAAzB,EAA6BI,GAA7B,EAAkC;AAChC;;AAEA,MAAIC,IAAIf,QAAQgB,mBAAR,CAA4BC,IAA5B,CAAiCP,EAAjC,CAAR;;AAEA;AACA,MAAIQ,WAAWH,EAAE,CAAF,KAAQA,EAAE,CAAF,CAAvB;AACA,MAAII,WAAWvB,KAAKwB,OAAL,CAAaN,GAAb,EAAkBI,QAAlB,CAAf;;AAEA,MAAI;AACF,WAAOxB,GAAG2B,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAAP;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CAAU,4DAA4DJ,QAA5D,GAAuE,IAAvE,GAA8EG,CAAxF,CAAN;AACD;AACF;;AAED,SAASE,SAAT,CAAoBd,EAApB,EAAwBe,IAAxB,EAA8B;AAC5BA,SAAOA,QAAQ,EAAf;;AAEA,MAAIA,KAAKC,aAAT,EAAwBhB,KAAKG,gBAAgBH,EAAhB,EAAoBe,KAAKE,cAAzB,CAAL;AACxB,MAAIF,KAAKG,UAAT,EAAqBlB,KAAKD,aAAaC,EAAb,CAAL;AACrB,MAAIe,KAAKI,SAAT,EAAoBnB,KAAKN,aAAaM,EAAb,CAAL;AACpB,MAAIe,KAAKK,MAAL,IAAeL,KAAKI,SAAxB,EAAmCnB,KAAKqB,KAAKC,KAAL,CAAWtB,EAAX,CAAL;;AAEnC,OAAKuB,SAAL,GAAiBvB,EAAjB;AACD;;AAEDc,UAAUU,SAAV,CAAoBC,MAApB,GAA6B,UAAUC,KAAV,EAAiB;AAC5C,SAAOL,KAAKM,SAAL,CAAe,KAAKJ,SAApB,EAA+B,IAA/B,EAAqCG,KAArC,CAAP;AACD,CAFD;;AAIAZ,UAAUU,SAAV,CAAoBI,QAApB,GAA+B,YAAY;AACzC,MAAIC,OAAO,KAAKJ,MAAL,EAAX;AACA,SAAOtC,WAAWS,MAAX,CAAkBC,IAAlB,CAAuBgC,IAAvB,EAA6B,MAA7B,EAAqC/B,QAArC,CAA8C,QAA9C,CAAP;AACD,CAHD;;AAKAgB,UAAUU,SAAV,CAAoBM,SAApB,GAAgC,UAAUC,OAAV,EAAmB;AACjD,MAAIpC,SAAS,KAAKiC,QAAL,EAAb;AACA,MAAII,OAAO,iEAAiErC,MAA5E;AACA,SAAOoC,WAAWA,QAAQE,SAAnB,GAA+B,SAASD,IAAT,GAAgB,KAA/C,GAAuD,SAASA,IAAvE;AACD,CAJD;;AAMA;AACAlB,UAAUU,SAAV,CAAoBU,QAApB,GAA+B,YAAY;AACzC,SAAOb,KAAKC,KAAL,CAAW,KAAKG,MAAL,EAAX,CAAP;AACD,CAFD;;AAIAX,UAAUU,SAAV,CAAoBW,WAApB,GAAkC,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACtD,MAAI,KAAKd,SAAL,CAAee,cAAf,CAA8BF,GAA9B,CAAJ,EAAwC,MAAM,IAAIvB,KAAJ,CAAU,eAAeuB,GAAf,GAAqB,6DAA/B,CAAN;AACxC,SAAO,KAAKG,WAAL,CAAiBH,GAAjB,EAAsBC,KAAtB,CAAP;AACD,CAHD;;AAKAvB,UAAUU,SAAV,CAAoBe,WAApB,GAAkC,UAAUH,GAAV,EAAeC,KAAf,EAAsB;AACtD,OAAKd,SAAL,CAAea,GAAf,IAAsBC,KAAtB;AACA,SAAO,IAAP;AACD,CAHD;;AAKAvB,UAAUU,SAAV,CAAoBgB,WAApB,GAAkC,UAAUJ,GAAV,EAAe;AAC/C,SAAO,KAAKb,SAAL,CAAea,GAAf,CAAP;AACD,CAFD;;AAIA9C,QAAQmD,UAAR,GAAqB,UAAUC,GAAV,EAAe;AAClC,SAAO,IAAI5B,SAAJ,CAAc4B,GAAd,CAAP;AACD,CAFD;;AAIApD,QAAQqD,QAAR,GAAmB,UAAUd,IAAV,EAAgB;AACjC,SAAO,IAAIf,SAAJ,CAAce,IAAd,EAAoB,EAAET,QAAQ,IAAV,EAApB,CAAP;AACD,CAFD;;AAIA9B,QAAQsD,UAAR,GAAqB,UAAUjD,MAAV,EAAkB;AACrC,SAAO,IAAImB,SAAJ,CAAcnB,MAAd,EAAsB,EAAEwB,WAAW,IAAb,EAAtB,CAAP;AACD,CAFD;;AAIA7B,QAAQuD,WAAR,GAAsB,UAAUC,OAAV,EAAmB;AACvCA,YAAUA,QACPC,OADO,CACC,QADD,EACW,IADX,EAEPA,OAFO,CAEC,QAFD,EAEW,EAFX,CAAV;;AAIA,SAAO,IAAIjC,SAAJ,CAAcgC,OAAd,EAAuB,EAAE3B,WAAW,IAAb,EAAmBD,YAAY,IAA/B,EAAvB,CAAP;AACD,CAND;;AAQA5B,QAAQ0D,kBAAR,GAA6B,UAAUF,OAAV,EAAmB1C,GAAnB,EAAwB;AACnD,SAAO,IAAIU,SAAJ,CAAcgC,OAAd,EAAuB,EAAE7B,gBAAgBb,GAAlB,EAAuBY,eAAe,IAAtC,EAA4CI,QAAQ,IAApD,EAAvB,CAAP;AACD,CAFD;;AAIA;AACA9B,QAAQ2D,UAAR,GAAqB,UAAUC,OAAV,EAAmB;AACtC,MAAIC,IAAID,QAAQE,KAAR,CAAc9D,QAAQ+D,YAAtB,CAAR;AACA,SAAOF,IAAI7D,QAAQuD,WAAR,CAAoBM,EAAEjD,GAAF,EAApB,CAAJ,GAAmC,IAA1C;AACD,CAHD;;AAKA;AACAZ,QAAQgE,iBAAR,GAA4B,UAAUJ,OAAV,EAAmB9C,GAAnB,EAAwB;AAClD,MAAI+C,IAAID,QAAQE,KAAR,CAAc9D,QAAQgB,mBAAtB,CAAR;AACA,SAAO6C,IAAI7D,QAAQ0D,kBAAR,CAA2BG,EAAEjD,GAAF,EAA3B,EAAoCE,GAApC,CAAJ,GAA+C,IAAtD;AACD,CAHD;;AAKAd,QAAQiE,cAAR,GAAyB,UAAUC,GAAV,EAAe;AACtC,SAAOA,IAAIT,OAAJ,CAAYzD,QAAQ+D,YAApB,EAAkC,EAAlC,CAAP;AACD,CAFD;;AAIA/D,QAAQmE,qBAAR,GAAgC,UAAUD,GAAV,EAAe;AAC7C,SAAOA,IAAIT,OAAJ,CAAYzD,QAAQgB,mBAApB,EAAyC,EAAzC,CAAP;AACD,CAFD;;AAIAhB,QAAQoE,sBAAR,GAAiC,UAAUC,IAAV,EAAgB5B,OAAhB,EAAyB;AACxD,MAAIC,OAAO,sBAAsB2B,IAAjC;AACA,SAAO5B,WAAWA,QAAQE,SAAnB,GAA+B,SAASD,IAAT,GAAgB,KAA/C,GAAuD,SAASA,IAAvE;AACD,CAHD","file":"index.js","sourcesContent":["'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar SafeBuffer = require('safe-buffer');\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\n\n\nfunction decodeBase64(base64) {\n  return SafeBuffer.Buffer.from(base64, 'base64').toString();\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nConverter.prototype.toBase64 = function () {\n  var json = this.toJSON();\n  return SafeBuffer.Buffer.from(json, 'utf8').toString('base64');\n};\n\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { isEncoded: true });\n};\n\nexports.fromComment = function (comment) {\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n\n  return new Converter(comment, { isEncoded: true, hasComment: true });\n};\n\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n"]}