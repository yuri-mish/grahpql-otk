{"version":3,"sources":["../../../node_modules/core-js/postinstall.js"],"names":["fs","require","os","path","env","process","ADBLOCK","is","COLOR","npm_config_color","DISABLE_OPENCOLLECTIVE","SILENT","indexOf","npm_config_loglevel","OPEN_SOURCE_CONTRIBUTOR","MINUTE","CI","some","it","BANNER","isBannerRequired","file","join","tmpdir","banners","DELTA","Date","now","statSync","mtime","JSON","parse","readFileSync","error","push","writeFileSync","stringify","showBanner","console","log","replace"],"mappings":"AAAA;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,MAAMC,QAAQD,GAAlB;;AAEA,IAAIE,UAAUC,GAAGH,IAAIE,OAAP,CAAd;AACA,IAAIE,QAAQD,GAAGH,IAAIK,gBAAP,CAAZ;AACA,IAAIC,yBAAyBH,GAAGH,IAAIM,sBAAP,CAA7B;AACA,IAAIC,SAAS,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA4BC,OAA5B,CAAoCR,IAAIS,mBAAxC,MAAiE,CAAC,CAA/E;AACA,IAAIC,0BAA0BP,GAAGH,IAAIU,uBAAP,CAA9B;AACA,IAAIC,SAAS,KAAK,IAAlB;;AAEA;AACA,IAAIC,KAAK,CACP,cADO,EAEP,IAFO,EAGP,wBAHO,EAIP,OAJO,EAKP,QALO,EAMPC,IANO,CAMF,UAAUC,EAAV,EAAc;AAAE,SAAOX,GAAGH,IAAIc,EAAJ,CAAH,CAAP;AAAqB,CANnC,CAAT;;AAQA,IAAIC,SAAS,gKACA,yHADA,GAEA,sEAFA,GAGA,sEAHA,GAIA,mIAJb;;AAMA,SAASZ,EAAT,CAAYW,EAAZ,EAAgB;AACd,SAAO,CAAC,CAACA,EAAF,IAAQA,OAAO,GAAf,IAAsBA,OAAO,OAApC;AACD;;AAED,SAASE,gBAAT,GAA4B;AAC1B,MAAId,WAAWU,EAAX,IAAiBN,sBAAjB,IAA2CC,MAA3C,IAAqDG,uBAAzD,EAAkF,OAAO,KAAP;AAClF,MAAIO,OAAOlB,KAAKmB,IAAL,CAAUpB,GAAGqB,MAAH,EAAV,EAAuB,iBAAvB,CAAX;AACA,MAAIC,UAAU,EAAd;AACA,MAAI;AACF,QAAIC,QAAQC,KAAKC,GAAL,KAAa3B,GAAG4B,QAAH,CAAYP,IAAZ,EAAkBQ,KAA3C;AACA,QAAIJ,SAAS,CAAT,IAAcA,QAAQV,SAAS,CAAnC,EAAsC;AACpCS,gBAAUM,KAAKC,KAAL,CAAW/B,GAAGgC,YAAH,CAAgBX,IAAhB,EAAsB,MAAtB,CAAX,CAAV;AACA,UAAIG,QAAQZ,OAAR,CAAgBO,MAAhB,MAA4B,CAAC,CAAjC,EAAoC,OAAO,KAAP;AACrC;AACF,GAND,CAME,OAAOc,KAAP,EAAc;AACdT,cAAU,EAAV;AACD;AACD,MAAI;AACFA,YAAQU,IAAR,CAAaf,MAAb;AACAnB,OAAGmC,aAAH,CAAiBd,IAAjB,EAAuBS,KAAKM,SAAL,CAAeZ,OAAf,CAAvB,EAAgD,MAAhD;AACD,GAHD,CAGE,OAAOS,KAAP,EAAc,CAAE,WAAa;AAC/B,SAAO,IAAP;AACD;;AAED,SAASI,UAAT,GAAsB;AACpB;AACAC,UAAQC,GAAR,CAAY/B,QAAQW,MAAR,GAAiBA,OAAOqB,OAAP,CAAe,eAAf,EAAgC,EAAhC,CAA7B;AACD;;AAED,IAAIpB,kBAAJ,EAAwBiB","file":"postinstall.js","sourcesContent":["/* eslint-disable max-len */\nvar fs = require('fs');\nvar os = require('os');\nvar path = require('path');\nvar env = process.env;\n\nvar ADBLOCK = is(env.ADBLOCK);\nvar COLOR = is(env.npm_config_color);\nvar DISABLE_OPENCOLLECTIVE = is(env.DISABLE_OPENCOLLECTIVE);\nvar SILENT = ['silent', 'error', 'warn'].indexOf(env.npm_config_loglevel) !== -1;\nvar OPEN_SOURCE_CONTRIBUTOR = is(env.OPEN_SOURCE_CONTRIBUTOR);\nvar MINUTE = 60 * 1000;\n\n// you could add a PR with an env variable for your CI detection\nvar CI = [\n  'BUILD_NUMBER',\n  'CI',\n  'CONTINUOUS_INTEGRATION',\n  'DRONE',\n  'RUN_ID'\n].some(function (it) { return is(env[it]); });\n\nvar BANNER = '\\u001B[96mThank you for using core-js (\\u001B[94m https://github.com/zloirock/core-js \\u001B[96m) for polyfilling JavaScript standard library!\\u001B[0m\\n\\n' +\n             '\\u001B[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \\u001B[0m\\n' +\n             '\\u001B[96m>\\u001B[94m https://opencollective.com/core-js \\u001B[0m\\n' +\n             '\\u001B[96m>\\u001B[94m https://www.patreon.com/zloirock \\u001B[0m\\n\\n' +\n             '\\u001B[96mAlso, the author of core-js (\\u001B[94m https://github.com/zloirock \\u001B[96m) is looking for a good job -)\\u001B[0m\\n';\n\nfunction is(it) {\n  return !!it && it !== '0' && it !== 'false';\n}\n\nfunction isBannerRequired() {\n  if (ADBLOCK || CI || DISABLE_OPENCOLLECTIVE || SILENT || OPEN_SOURCE_CONTRIBUTOR) return false;\n  var file = path.join(os.tmpdir(), 'core-js-banners');\n  var banners = [];\n  try {\n    var DELTA = Date.now() - fs.statSync(file).mtime;\n    if (DELTA >= 0 && DELTA < MINUTE * 3) {\n      banners = JSON.parse(fs.readFileSync(file, 'utf8'));\n      if (banners.indexOf(BANNER) !== -1) return false;\n    }\n  } catch (error) {\n    banners = [];\n  }\n  try {\n    banners.push(BANNER);\n    fs.writeFileSync(file, JSON.stringify(banners), 'utf8');\n  } catch (error) { /* empty */ }\n  return true;\n}\n\nfunction showBanner() {\n  // eslint-disable-next-line no-console,no-control-regex\n  console.log(COLOR ? BANNER : BANNER.replace(/\\u001B\\[\\d+m/g, ''));\n}\n\nif (isBannerRequired()) showBanner();\n"]}