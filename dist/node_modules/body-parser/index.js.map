{"version":3,"sources":["../../../node_modules/body-parser/index.js"],"names":["deprecate","require","parsers","Object","create","exports","module","function","bodyParser","defineProperty","configurable","enumerable","get","createParserGetter","options","opts","prop","_urlencoded","urlencoded","_json","json","req","res","next","err","name","loadParser","parserName","parser","undefined"],"mappings":"AAAA;;;;;;AAMA;;AAEA;;;;;AAKA,IAAIA,YAAYC,QAAQ,MAAR,EAAgB,aAAhB,CAAhB;;AAEA;;;;;AAKA,IAAIC,UAAUC,OAAOC,MAAP,CAAc,IAAd,CAAd;;AAEA;;;;;;;;;AASA;;;;;AAKAC,UAAUC,OAAOD,OAAP,GAAiBL,UAAUO,QAAV,CAAmBC,UAAnB,EACzB,wDADyB,CAA3B;;AAGA;;;;;AAKAL,OAAOM,cAAP,CAAsBJ,OAAtB,EAA+B,MAA/B,EAAuC;AACrCK,gBAAc,IADuB;AAErCC,cAAY,IAFyB;AAGrCC,OAAKC,mBAAmB,MAAnB;AAHgC,CAAvC;;AAMA;;;;;AAKAV,OAAOM,cAAP,CAAsBJ,OAAtB,EAA+B,KAA/B,EAAsC;AACpCK,gBAAc,IADsB;AAEpCC,cAAY,IAFwB;AAGpCC,OAAKC,mBAAmB,KAAnB;AAH+B,CAAtC;;AAMA;;;;;AAKAV,OAAOM,cAAP,CAAsBJ,OAAtB,EAA+B,MAA/B,EAAuC;AACrCK,gBAAc,IADuB;AAErCC,cAAY,IAFyB;AAGrCC,OAAKC,mBAAmB,MAAnB;AAHgC,CAAvC;;AAMA;;;;;AAKAV,OAAOM,cAAP,CAAsBJ,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CK,gBAAc,IAD6B;AAE3CC,cAAY,IAF+B;AAG3CC,OAAKC,mBAAmB,YAAnB;AAHsC,CAA7C;;AAMA;;;;;;;;;AASA,SAASL,UAAT,CAAqBM,OAArB,EAA8B;AAC5B,MAAIC,OAAO,EAAX;;AAEA;AACA,MAAID,OAAJ,EAAa;AACX,SAAK,IAAIE,IAAT,IAAiBF,OAAjB,EAA0B;AACxB,UAAIE,SAAS,MAAb,EAAqB;AACnBD,aAAKC,IAAL,IAAaF,QAAQE,IAAR,CAAb;AACD;AACF;AACF;;AAED,MAAIC,cAAcZ,QAAQa,UAAR,CAAmBH,IAAnB,CAAlB;AACA,MAAII,QAAQd,QAAQe,IAAR,CAAaL,IAAb,CAAZ;;AAEA,SAAO,SAASP,UAAT,CAAqBa,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAC1CJ,UAAME,GAAN,EAAWC,GAAX,EAAgB,UAAUE,GAAV,EAAe;AAC7B,UAAIA,GAAJ,EAAS,OAAOD,KAAKC,GAAL,CAAP;AACTP,kBAAYI,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB;AACD,KAHD;AAID,GALD;AAMD;;AAED;;;;;AAKA,SAASV,kBAAT,CAA6BY,IAA7B,EAAmC;AACjC,SAAO,SAASb,GAAT,GAAgB;AACrB,WAAOc,WAAWD,IAAX,CAAP;AACD,GAFD;AAGD;;AAED;;;;;AAKA,SAASC,UAAT,CAAqBC,UAArB,EAAiC;AAC/B,MAAIC,SAAS1B,QAAQyB,UAAR,CAAb;;AAEA,MAAIC,WAAWC,SAAf,EAA0B;AACxB,WAAOD,MAAP;AACD;;AAED;AACA,UAAQD,UAAR;AACE,SAAK,MAAL;AACEC,eAAS3B,QAAQ,kBAAR,CAAT;AACA;AACF,SAAK,KAAL;AACE2B,eAAS3B,QAAQ,iBAAR,CAAT;AACA;AACF,SAAK,MAAL;AACE2B,eAAS3B,QAAQ,kBAAR,CAAT;AACA;AACF,SAAK,YAAL;AACE2B,eAAS3B,QAAQ,wBAAR,CAAT;AACA;AAZJ;;AAeA;AACA,SAAQC,QAAQyB,UAAR,IAAsBC,MAA9B;AACD","file":"index.js","sourcesContent":["/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n"]}