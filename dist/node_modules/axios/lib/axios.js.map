{"version":3,"sources":["../../../../node_modules/axios/lib/axios.js"],"names":["utils","require","bind","Axios","mergeConfig","defaults","createInstance","defaultConfig","context","instance","prototype","request","extend","axios","create","instanceConfig","Cancel","CancelToken","isCancel","all","promises","Promise","spread","module","exports","default"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,SAAR,CAAZ;AACA,IAAIC,OAAOD,QAAQ,gBAAR,CAAX;AACA,IAAIE,QAAQF,QAAQ,cAAR,CAAZ;AACA,IAAIG,cAAcH,QAAQ,oBAAR,CAAlB;AACA,IAAII,WAAWJ,QAAQ,YAAR,CAAf;;AAEA;;;;;;AAMA,SAASK,cAAT,CAAwBC,aAAxB,EAAuC;AACrC,MAAIC,UAAU,IAAIL,KAAJ,CAAUI,aAAV,CAAd;AACA,MAAIE,WAAWP,KAAKC,MAAMO,SAAN,CAAgBC,OAArB,EAA8BH,OAA9B,CAAf;;AAEA;AACAR,QAAMY,MAAN,CAAaH,QAAb,EAAuBN,MAAMO,SAA7B,EAAwCF,OAAxC;;AAEA;AACAR,QAAMY,MAAN,CAAaH,QAAb,EAAuBD,OAAvB;;AAEA,SAAOC,QAAP;AACD;;AAED;AACA,IAAII,QAAQP,eAAeD,QAAf,CAAZ;;AAEA;AACAQ,MAAMV,KAAN,GAAcA,KAAd;;AAEA;AACAU,MAAMC,MAAN,GAAe,SAASA,MAAT,CAAgBC,cAAhB,EAAgC;AAC7C,SAAOT,eAAeF,YAAYS,MAAMR,QAAlB,EAA4BU,cAA5B,CAAf,CAAP;AACD,CAFD;;AAIA;AACAF,MAAMG,MAAN,GAAef,QAAQ,iBAAR,CAAf;AACAY,MAAMI,WAAN,GAAoBhB,QAAQ,sBAAR,CAApB;AACAY,MAAMK,QAAN,GAAiBjB,QAAQ,mBAAR,CAAjB;;AAEA;AACAY,MAAMM,GAAN,GAAY,SAASA,GAAT,CAAaC,QAAb,EAAuB;AACjC,SAAOC,QAAQF,GAAR,CAAYC,QAAZ,CAAP;AACD,CAFD;AAGAP,MAAMS,MAAN,GAAerB,QAAQ,kBAAR,CAAf;;AAEAsB,OAAOC,OAAP,GAAiBX,KAAjB;;AAEA;AACAU,OAAOC,OAAP,CAAeC,OAAf,GAAyBZ,KAAzB","file":"axios.js","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n"]}