{"version":3,"sources":["../../../../../node_modules/axios/lib/core/Axios.js"],"names":["utils","require","buildURL","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","push","length","then","shift","getUri","params","paramsSerializer","replace","forEachMethodNoData","data","forEachMethodWithData","module","exports"],"mappings":"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","file":"Axios.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n"]}