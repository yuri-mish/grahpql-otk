{"version":3,"sources":["../../../../../node_modules/axios/lib/core/dispatchRequest.js"],"names":["utils","require","transformData","isCancel","defaults","throwIfCancellationRequested","config","cancelToken","throwIfRequested","module","exports","dispatchRequest","headers","data","transformRequest","merge","common","method","forEach","cleanHeaderConfig","adapter","then","onAdapterResolution","response","transformResponse","onAdapterRejection","reason","Promise","reject"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,YAAR,CAAZ;AACA,IAAIC,gBAAgBD,QAAQ,iBAAR,CAApB;AACA,IAAIE,WAAWF,QAAQ,oBAAR,CAAf;AACA,IAAIG,WAAWH,QAAQ,aAAR,CAAf;;AAEA;;;AAGA,SAASI,4BAAT,CAAsCC,MAAtC,EAA8C;AAC5C,MAAIA,OAAOC,WAAX,EAAwB;AACtBD,WAAOC,WAAP,CAAmBC,gBAAnB;AACD;AACF;;AAED;;;;;;AAMAC,OAAOC,OAAP,GAAiB,SAASC,eAAT,CAAyBL,MAAzB,EAAiC;AAChDD,+BAA6BC,MAA7B;;AAEA;AACAA,SAAOM,OAAP,GAAiBN,OAAOM,OAAP,IAAkB,EAAnC;;AAEA;AACAN,SAAOO,IAAP,GAAcX,cACZI,OAAOO,IADK,EAEZP,OAAOM,OAFK,EAGZN,OAAOQ,gBAHK,CAAd;;AAMA;AACAR,SAAOM,OAAP,GAAiBZ,MAAMe,KAAN,CACfT,OAAOM,OAAP,CAAeI,MAAf,IAAyB,EADV,EAEfV,OAAOM,OAAP,CAAeN,OAAOW,MAAtB,KAAiC,EAFlB,EAGfX,OAAOM,OAHQ,CAAjB;;AAMAZ,QAAMkB,OAAN,CACE,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,KAAlC,EAAyC,OAAzC,EAAkD,QAAlD,CADF,EAEE,SAASC,iBAAT,CAA2BF,MAA3B,EAAmC;AACjC,WAAOX,OAAOM,OAAP,CAAeK,MAAf,CAAP;AACD,GAJH;;AAOA,MAAIG,UAAUd,OAAOc,OAAP,IAAkBhB,SAASgB,OAAzC;;AAEA,SAAOA,QAAQd,MAAR,EAAgBe,IAAhB,CAAqB,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACjElB,iCAA6BC,MAA7B;;AAEA;AACAiB,aAASV,IAAT,GAAgBX,cACdqB,SAASV,IADK,EAEdU,SAASX,OAFK,EAGdN,OAAOkB,iBAHO,CAAhB;;AAMA,WAAOD,QAAP;AACD,GAXM,EAWJ,SAASE,kBAAT,CAA4BC,MAA5B,EAAoC;AACrC,QAAI,CAACvB,SAASuB,MAAT,CAAL,EAAuB;AACrBrB,mCAA6BC,MAA7B;;AAEA;AACA,UAAIoB,UAAUA,OAAOH,QAArB,EAA+B;AAC7BG,eAAOH,QAAP,CAAgBV,IAAhB,GAAuBX,cACrBwB,OAAOH,QAAP,CAAgBV,IADK,EAErBa,OAAOH,QAAP,CAAgBX,OAFK,EAGrBN,OAAOkB,iBAHc,CAAvB;AAKD;AACF;;AAED,WAAOG,QAAQC,MAAR,CAAeF,MAAf,CAAP;AACD,GA1BM,CAAP;AA2BD,CAxDD","file":"dispatchRequest.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n"]}