{"version":3,"sources":["../../../../../node_modules/axios/lib/helpers/cookies.js"],"names":["utils","require","module","exports","isStandardBrowserEnv","standardBrowserEnv","write","name","value","expires","path","domain","secure","cookie","push","encodeURIComponent","isNumber","Date","toGMTString","isString","document","join","read","match","RegExp","decodeURIComponent","remove","now","nonStandardBrowserEnv"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,YAAR,CAAZ;;AAEAC,OAAOC,OAAP,GACEH,MAAMI,oBAAN;;AAEA;AACG,SAASC,kBAAT,GAA8B;AAC7B,SAAO;AACLC,WAAO,SAASA,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2D;AAChE,UAAIC,SAAS,EAAb;AACAA,aAAOC,IAAP,CAAYP,OAAO,GAAP,GAAaQ,mBAAmBP,KAAnB,CAAzB;;AAEA,UAAIR,MAAMgB,QAAN,CAAeP,OAAf,CAAJ,EAA6B;AAC3BI,eAAOC,IAAP,CAAY,aAAa,IAAIG,IAAJ,CAASR,OAAT,EAAkBS,WAAlB,EAAzB;AACD;;AAED,UAAIlB,MAAMmB,QAAN,CAAeT,IAAf,CAAJ,EAA0B;AACxBG,eAAOC,IAAP,CAAY,UAAUJ,IAAtB;AACD;;AAED,UAAIV,MAAMmB,QAAN,CAAeR,MAAf,CAAJ,EAA4B;AAC1BE,eAAOC,IAAP,CAAY,YAAYH,MAAxB;AACD;;AAED,UAAIC,WAAW,IAAf,EAAqB;AACnBC,eAAOC,IAAP,CAAY,QAAZ;AACD;;AAEDM,eAASP,MAAT,GAAkBA,OAAOQ,IAAP,CAAY,IAAZ,CAAlB;AACD,KAtBI;;AAwBLC,UAAM,SAASA,IAAT,CAAcf,IAAd,EAAoB;AACxB,UAAIgB,QAAQH,SAASP,MAAT,CAAgBU,KAAhB,CAAsB,IAAIC,MAAJ,CAAW,eAAejB,IAAf,GAAsB,WAAjC,CAAtB,CAAZ;AACA,aAAQgB,QAAQE,mBAAmBF,MAAM,CAAN,CAAnB,CAAR,GAAuC,IAA/C;AACD,KA3BI;;AA6BLG,YAAQ,SAASA,MAAT,CAAgBnB,IAAhB,EAAsB;AAC5B,WAAKD,KAAL,CAAWC,IAAX,EAAiB,EAAjB,EAAqBU,KAAKU,GAAL,KAAa,QAAlC;AACD;AA/BI,GAAP;AAiCD,CAlCD,EAHF;;AAuCA;AACG,SAASC,qBAAT,GAAiC;AAChC,SAAO;AACLtB,WAAO,SAASA,KAAT,GAAiB,CAAE,CADrB;AAELgB,UAAM,SAASA,IAAT,GAAgB;AAAE,aAAO,IAAP;AAAc,KAFjC;AAGLI,YAAQ,SAASA,MAAT,GAAkB,CAAE;AAHvB,GAAP;AAKD,CAND,EAzCJ","file":"cookies.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n"]}