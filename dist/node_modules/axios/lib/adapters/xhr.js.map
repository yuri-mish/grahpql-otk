{"version":3,"sources":["../../../../../node_modules/axios/lib/adapters/xhr.js"],"names":["utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onabort","handleAbort","onerror","handleError","ontimeout","handleTimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"mappings":"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","file":"xhr.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"]}