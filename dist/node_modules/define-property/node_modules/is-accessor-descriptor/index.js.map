{"version":3,"sources":["../../../../../node_modules/define-property/node_modules/is-accessor-descriptor/index.js"],"names":["typeOf","require","accessor","get","set","configurable","enumerable","isAccessorDescriptor","obj","prop","val","Object","getOwnPropertyDescriptor","has","key","hasOwnProperty","call","module","exports"],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAIA,SAASC,QAAQ,SAAR,CAAb;;AAEA;AACA,IAAIC,WAAW;AACbC,OAAK,UADQ;AAEbC,OAAK,UAFQ;AAGbC,gBAAc,SAHD;AAIbC,cAAY;AAJC,CAAf;;AAOA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACvC,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIC,MAAMC,OAAOC,wBAAP,CAAgCJ,GAAhC,EAAqCC,IAArC,CAAV;AACA,WAAO,OAAOC,GAAP,KAAe,WAAtB;AACD;;AAED,MAAIV,OAAOQ,GAAP,MAAgB,QAApB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAIK,IAAIL,GAAJ,EAAS,OAAT,KAAqBK,IAAIL,GAAJ,EAAS,UAAT,CAAzB,EAA+C;AAC7C,WAAO,KAAP;AACD;;AAED,MAAI,CAACK,IAAIL,GAAJ,EAAS,KAAT,CAAD,IAAoB,OAAOA,IAAIL,GAAX,KAAmB,UAA3C,EAAuD;AACrD,WAAO,KAAP;AACD;;AAED;AACA;AACA;AACA,MAAIU,IAAIL,GAAJ,EAAS,KAAT,KAAmB,OAAOA,IAAIM,GAAJ,CAAP,KAAoB,UAAvC,IAAqD,OAAON,IAAIM,GAAJ,CAAP,KAAoB,WAA7E,EAA0F;AACxF,WAAO,KAAP;AACD;;AAED,OAAK,IAAIA,GAAT,IAAgBN,GAAhB,EAAqB;AACnB,QAAI,CAACN,SAASa,cAAT,CAAwBD,GAAxB,CAAL,EAAmC;AACjC;AACD;;AAED,QAAId,OAAOQ,IAAIM,GAAJ,CAAP,MAAqBZ,SAASY,GAAT,CAAzB,EAAwC;AACtC;AACD;;AAED,QAAI,OAAON,IAAIM,GAAJ,CAAP,KAAoB,WAAxB,EAAqC;AACnC,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED,SAASD,GAAT,CAAaL,GAAb,EAAkBM,GAAlB,EAAuB;AACrB,SAAO,GAAGC,cAAH,CAAkBC,IAAlB,CAAuBR,GAAvB,EAA4BM,GAA5B,CAAP;AACD;;AAED;;;;AAIAG,OAAOC,OAAP,GAAiBX,oBAAjB","file":"index.js","sourcesContent":["/*!\n * is-accessor-descriptor <https://github.com/jonschlinkert/is-accessor-descriptor>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\n\n// accessor descriptor properties\nvar accessor = {\n  get: 'function',\n  set: 'function',\n  configurable: 'boolean',\n  enumerable: 'boolean'\n};\n\nfunction isAccessorDescriptor(obj, prop) {\n  if (typeof prop === 'string') {\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\n    return typeof val !== 'undefined';\n  }\n\n  if (typeOf(obj) !== 'object') {\n    return false;\n  }\n\n  if (has(obj, 'value') || has(obj, 'writable')) {\n    return false;\n  }\n\n  if (!has(obj, 'get') || typeof obj.get !== 'function') {\n    return false;\n  }\n\n  // tldr: it's valid to have \"set\" be undefined\n  // \"set\" might be undefined if `Object.getOwnPropertyDescriptor`\n  // was used to get the value, and only `get` was defined by the user\n  if (has(obj, 'set') && typeof obj[key] !== 'function' && typeof obj[key] !== 'undefined') {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (!accessor.hasOwnProperty(key)) {\n      continue;\n    }\n\n    if (typeOf(obj[key]) === accessor[key]) {\n      continue;\n    }\n\n    if (typeof obj[key] !== 'undefined') {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction has(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Expose `isAccessorDescriptor`\n */\n\nmodule.exports = isAccessorDescriptor;\n"]}