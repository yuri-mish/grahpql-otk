{"version":3,"sources":["../../../../../node_modules/depd/lib/compat/index.js"],"names":["EventEmitter","require","lazyProperty","module","exports","callSiteToString","limit","Error","stackTraceLimit","obj","prep","prepareStackTrace","prepareObjectStackTrace","stack","captureStackTrace","slice","toString","eventListenerCount","listenerCount","prop","getter","get","val","Object","defineProperty","configurable","enumerable","value"],"mappings":"AAAA;;;;;;AAMA;;AAEA;;;;;AAKA,IAAIA,eAAeC,QAAQ,QAAR,EAAkBD,YAArC;;AAEA;;;;;AAKAE,aAAaC,OAAOC,OAApB,EAA6B,kBAA7B,EAAiD,SAASC,gBAAT,GAA6B;AAC5E,MAAIC,QAAQC,MAAMC,eAAlB;AACA,MAAIC,MAAM,EAAV;AACA,MAAIC,OAAOH,MAAMI,iBAAjB;;AAEA,WAASC,uBAAT,CAAkCH,GAAlC,EAAuCI,KAAvC,EAA8C;AAC5C,WAAOA,KAAP;AACD;;AAEDN,QAAMI,iBAAN,GAA0BC,uBAA1B;AACAL,QAAMC,eAAN,GAAwB,CAAxB;;AAEA;AACAD,QAAMO,iBAAN,CAAwBL,GAAxB;;AAEA;AACA,MAAII,QAAQJ,IAAII,KAAJ,CAAUE,KAAV,EAAZ;;AAEAR,QAAMI,iBAAN,GAA0BD,IAA1B;AACAH,QAAMC,eAAN,GAAwBF,KAAxB;;AAEA,SAAOO,MAAM,CAAN,EAASG,QAAT,GAAoBA,QAApB,GAA+Bf,QAAQ,qBAAR,CAAtC;AACD,CAtBD;;AAwBAC,aAAaC,OAAOC,OAApB,EAA6B,oBAA7B,EAAmD,SAASa,kBAAT,GAA+B;AAChF,SAAOjB,aAAakB,aAAb,IAA8BjB,QAAQ,wBAAR,CAArC;AACD,CAFD;;AAIA;;;;AAIA,SAASC,YAAT,CAAuBO,GAAvB,EAA4BU,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,WAASC,GAAT,GAAgB;AACd,QAAIC,MAAMF,QAAV;;AAEAG,WAAOC,cAAP,CAAsBf,GAAtB,EAA2BU,IAA3B,EAAiC;AAC/BM,oBAAc,IADiB;AAE/BC,kBAAY,IAFmB;AAG/BC,aAAOL;AAHwB,KAAjC;;AAMA,WAAOA,GAAP;AACD;;AAEDC,SAAOC,cAAP,CAAsBf,GAAtB,EAA2BU,IAA3B,EAAiC;AAC/BM,kBAAc,IADiB;AAE/BC,gBAAY,IAFmB;AAG/BL,SAAKA;AAH0B,GAAjC;AAKD;;AAED;;;;AAIA,SAASL,QAAT,CAAmBP,GAAnB,EAAwB;AACtB,SAAOA,IAAIO,QAAJ,EAAP;AACD","file":"index.js","sourcesContent":["/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace (obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty (obj, prop, getter) {\n  function get () {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString (obj) {\n  return obj.toString()\n}\n"]}