{"version":3,"sources":["../../../../../node_modules/babel-cli/lib/babel/dir.js"],"names":["_stringify","require","_stringify2","_interopRequireDefault","obj","__esModule","default","outputFileSync","slash","path","util","fs","module","exports","commander","filenames","write","src","relative","replace","dest","join","outDir","data","compile","sourceFileName","sourceMapTarget","basename","copyFiles","ignored","map","sourceMaps","mapLoc","code","addSourceMappingUrl","chmod","log","handleFile","filename","shouldIgnore","canCompile","extensions","readFileSync","handle","existsSync","stat","statSync","isDirectory","dirname","readdir","forEach","skipInitialBuild","watch","chokidar","requireChokidar","watcher","persistent","ignoreInitial","awaitWriteFinish","stabilityThreshold","pollInterval","type","on","err","console","error","stack"],"mappings":"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","file":"dir.js","sourcesContent":["\"use strict\";\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar outputFileSync = require(\"output-file-sync\");\nvar slash = require(\"slash\");\nvar path = require(\"path\");\nvar util = require(\"./util\");\nvar fs = require(\"fs\");\n\nmodule.exports = function (commander, filenames) {\n  function write(src, relative) {\n    relative = relative.replace(/\\.(\\w*?)$/, \"\") + \".js\";\n\n    var dest = path.join(commander.outDir, relative);\n\n    var data = util.compile(src, {\n      sourceFileName: slash(path.relative(dest + \"/..\", src)),\n      sourceMapTarget: path.basename(relative)\n    });\n    if (!commander.copyFiles && data.ignored) return;\n\n    if (data.map && commander.sourceMaps && commander.sourceMaps !== \"inline\") {\n      var mapLoc = dest + \".map\";\n      data.code = util.addSourceMappingUrl(data.code, mapLoc);\n      outputFileSync(mapLoc, (0, _stringify2.default)(data.map));\n    }\n\n    outputFileSync(dest, data.code);\n    util.chmod(src, dest);\n\n    util.log(src + \" -> \" + dest);\n  }\n\n  function handleFile(src, filename) {\n    if (util.shouldIgnore(src)) return;\n\n    if (util.canCompile(filename, commander.extensions)) {\n      write(src, filename);\n    } else if (commander.copyFiles) {\n      var dest = path.join(commander.outDir, filename);\n      outputFileSync(dest, fs.readFileSync(src));\n      util.chmod(src, dest);\n    }\n  }\n\n  function handle(filename) {\n    if (!fs.existsSync(filename)) return;\n\n    var stat = fs.statSync(filename);\n\n    if (stat.isDirectory(filename)) {\n      var dirname = filename;\n\n      util.readdir(dirname).forEach(function (filename) {\n        var src = path.join(dirname, filename);\n        handleFile(src, filename);\n      });\n    } else {\n      write(filename, filename);\n    }\n  }\n\n  if (!commander.skipInitialBuild) {\n    filenames.forEach(handle);\n  }\n\n  if (commander.watch) {\n    var chokidar = util.requireChokidar();\n\n    filenames.forEach(function (dirname) {\n      var watcher = chokidar.watch(dirname, {\n        persistent: true,\n        ignoreInitial: true,\n        awaitWriteFinish: {\n          stabilityThreshold: 50,\n          pollInterval: 10\n        }\n      });\n\n      [\"add\", \"change\"].forEach(function (type) {\n        watcher.on(type, function (filename) {\n          var relative = path.relative(dirname, filename) || filename;\n          try {\n            handleFile(filename, relative);\n          } catch (err) {\n            console.error(err.stack);\n          }\n        });\n      });\n    });\n  }\n};"]}