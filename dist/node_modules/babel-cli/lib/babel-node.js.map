{"version":3,"sources":["../../../../node_modules/babel-cli/lib/babel-node.js"],"names":["getV8Flags","require","path","args","join","__dirname","babelArgs","process","argv","slice","userArgs","argSeparator","indexOf","getNormalizedV8Flag","arg","matches","match","replace","err","v8Flags","forEach","flag","split","unshift","push","concat","kexec","code","child_process","proc","spawn","stdio","on","signal","kill","pid","exit"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,SAAR,CAAjB;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,IAAIE,OAAO,CAACD,KAAKE,IAAL,CAAUC,SAAV,EAAqB,aAArB,CAAD,CAAX;;AAEA,IAAIC,YAAYC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAhB;AACA,IAAIC,WAAW,KAAK,CAApB;;AAEA,IAAIC,eAAeL,UAAUM,OAAV,CAAkB,IAAlB,CAAnB;AACA,IAAID,eAAe,CAAC,CAApB,EAAuB;AACrBD,aAAWJ,UAAUG,KAAV,CAAgBE,YAAhB,CAAX;AACAL,cAAYA,UAAUG,KAAV,CAAgB,CAAhB,EAAmBE,YAAnB,CAAZ;AACD;;AAED,SAASE,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,MAAIC,UAAUD,IAAIE,KAAJ,CAAU,QAAV,CAAd;;AAEA,MAAID,OAAJ,EAAa;AACX,WAAO,OAAOA,QAAQ,CAAR,EAAWE,OAAX,CAAmB,IAAnB,EAAyB,GAAzB,CAAd;AACD;;AAED,SAAOH,GAAP;AACD;;AAEDd,WAAW,UAAUkB,GAAV,EAAeC,OAAf,EAAwB;AACjCb,YAAUc,OAAV,CAAkB,UAAUN,GAAV,EAAe;AAC/B,QAAIO,OAAOP,IAAIQ,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX;;AAEA,YAAQD,IAAR;AACE,WAAK,IAAL;AACElB,aAAKoB,OAAL,CAAa,SAAb;AACA;;AAEF,WAAK,OAAL;AACA,WAAK,SAAL;AACA,WAAK,aAAL;AACA,WAAK,WAAL;AACA,WAAK,eAAL;AACEpB,aAAKoB,OAAL,CAAaT,GAAb;AACA;;AAEF,WAAK,KAAL;AACEX,aAAKoB,OAAL,CAAa,aAAb;AACA;;AAEF,WAAK,UAAL;AACEpB,aAAKoB,OAAL,CAAaF,IAAb;AACA;;AAEF;AACE,YAAIF,QAAQP,OAAR,CAAgBC,oBAAoBQ,IAApB,CAAhB,KAA8C,CAA9C,IAAmDP,IAAIF,OAAJ,CAAY,SAAZ,MAA2B,CAAlF,EAAqF;AACnFT,eAAKoB,OAAL,CAAaT,GAAb;AACD,SAFD,MAEO;AACLX,eAAKqB,IAAL,CAAUV,GAAV;AACD;AACD;AA3BJ;AA6BD,GAhCD;;AAkCA,MAAIH,eAAe,CAAC,CAApB,EAAuB;AACrBR,WAAOA,KAAKsB,MAAL,CAAYf,QAAZ,CAAP;AACD;;AAED,MAAI;AACF,QAAIgB,QAAQzB,QAAQ,OAAR,CAAZ;AACAyB,UAAMnB,QAAQC,IAAR,CAAa,CAAb,CAAN,EAAuBL,IAAvB;AACD,GAHD,CAGE,OAAOe,GAAP,EAAY;AACZ,QAAIA,IAAIS,IAAJ,KAAa,kBAAjB,EAAqC,MAAMT,GAAN;;AAErC,QAAIU,gBAAgB3B,QAAQ,eAAR,CAApB;AACA,QAAI4B,OAAOD,cAAcE,KAAd,CAAoBvB,QAAQC,IAAR,CAAa,CAAb,CAApB,EAAqCL,IAArC,EAA2C,EAAE4B,OAAO,SAAT,EAA3C,CAAX;AACAF,SAAKG,EAAL,CAAQ,MAAR,EAAgB,UAAUL,IAAV,EAAgBM,MAAhB,EAAwB;AACtC1B,cAAQyB,EAAR,CAAW,MAAX,EAAmB,YAAY;AAC7B,YAAIC,MAAJ,EAAY;AACV1B,kBAAQ2B,IAAR,CAAa3B,QAAQ4B,GAArB,EAA0BF,MAA1B;AACD,SAFD,MAEO;AACL1B,kBAAQ6B,IAAR,CAAaT,IAAb;AACD;AACF,OAND;AAOD,KARD;AASD;AACF,CAzDD","file":"babel-node.js","sourcesContent":["\"use strict\";\n\nvar getV8Flags = require(\"v8flags\");\nvar path = require(\"path\");\n\nvar args = [path.join(__dirname, \"_babel-node\")];\n\nvar babelArgs = process.argv.slice(2);\nvar userArgs = void 0;\n\nvar argSeparator = babelArgs.indexOf(\"--\");\nif (argSeparator > -1) {\n  userArgs = babelArgs.slice(argSeparator);\n  babelArgs = babelArgs.slice(0, argSeparator);\n}\n\nfunction getNormalizedV8Flag(arg) {\n  var matches = arg.match(/--(.+)/);\n\n  if (matches) {\n    return \"--\" + matches[1].replace(/-/g, \"_\");\n  }\n\n  return arg;\n}\n\ngetV8Flags(function (err, v8Flags) {\n  babelArgs.forEach(function (arg) {\n    var flag = arg.split(\"=\")[0];\n\n    switch (flag) {\n      case \"-d\":\n        args.unshift(\"--debug\");\n        break;\n\n      case \"debug\":\n      case \"--debug\":\n      case \"--debug-brk\":\n      case \"--inspect\":\n      case \"--inspect-brk\":\n        args.unshift(arg);\n        break;\n\n      case \"-gc\":\n        args.unshift(\"--expose-gc\");\n        break;\n\n      case \"--nolazy\":\n        args.unshift(flag);\n        break;\n\n      default:\n        if (v8Flags.indexOf(getNormalizedV8Flag(flag)) >= 0 || arg.indexOf(\"--trace\") === 0) {\n          args.unshift(arg);\n        } else {\n          args.push(arg);\n        }\n        break;\n    }\n  });\n\n  if (argSeparator > -1) {\n    args = args.concat(userArgs);\n  }\n\n  try {\n    var kexec = require(\"kexec\");\n    kexec(process.argv[0], args);\n  } catch (err) {\n    if (err.code !== \"MODULE_NOT_FOUND\") throw err;\n\n    var child_process = require(\"child_process\");\n    var proc = child_process.spawn(process.argv[0], args, { stdio: \"inherit\" });\n    proc.on(\"exit\", function (code, signal) {\n      process.on(\"exit\", function () {\n        if (signal) {\n          process.kill(process.pid, signal);\n        } else {\n          process.exit(code);\n        }\n      });\n    });\n  }\n});"]}