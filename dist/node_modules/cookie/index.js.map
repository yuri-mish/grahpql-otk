{"version":3,"sources":["../../../node_modules/cookie/index.js"],"names":["exports","parse","serialize","decode","decodeURIComponent","encode","encodeURIComponent","pairSplitRegExp","fieldContentRegExp","str","options","TypeError","obj","opt","pairs","split","dec","i","length","pair","eq_idx","indexOf","key","substr","trim","val","slice","undefined","tryDecode","name","enc","test","value","maxAge","isNaN","Error","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","e"],"mappings":"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","file":"index.js","sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n"]}