{"version":3,"sources":["../../../node_modules/async-each/index.js"],"names":["globals","each","items","next","callback","Array","isArray","TypeError","Function","prototype","length","undefined","transformed","count","returned","forEach","item","index","error","transformedItem","define","amd","module","exports","asyncEach"],"mappings":"AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,OAAO,UAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AACzC,QAAI,CAACC,MAAMC,OAAN,CAAcJ,KAAd,CAAL,EAA2B,MAAM,IAAIK,SAAJ,CAAc,wCAAd,CAAN;AAC3B,QAAI,OAAOJ,IAAP,KAAgB,UAApB,EAAgC,MAAM,IAAII,SAAJ,CAAc,4CAAd,CAAN;AAChC,QAAI,OAAOH,QAAP,KAAoB,UAAxB,EAAoCA,WAAWI,SAASC,SAApB,CAHK,CAG0B;;AAEnE,QAAIP,MAAMQ,MAAN,KAAiB,CAArB,EAAwB,OAAON,SAASO,SAAT,EAAoBT,KAApB,CAAP;;AAExB,QAAIU,cAAc,IAAIP,KAAJ,CAAUH,MAAMQ,MAAhB,CAAlB;AACA,QAAIG,QAAQ,CAAZ;AACA,QAAIC,WAAW,KAAf;;AAEAZ,UAAMa,OAAN,CAAc,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAClCd,WAAKa,IAAL,EAAW,UAASE,KAAT,EAAgBC,eAAhB,EAAiC;AAC1C,YAAIL,QAAJ,EAAc;AACd,YAAII,KAAJ,EAAW;AACTJ,qBAAW,IAAX;AACA,iBAAOV,SAASc,KAAT,CAAP;AACD;AACDN,oBAAYK,KAAZ,IAAqBE,eAArB;AACAN,iBAAS,CAAT;AACA,YAAIA,UAAUX,MAAMQ,MAApB,EAA4B,OAAON,SAASO,SAAT,EAAoBC,WAApB,CAAP;AAC7B,OATD;AAUD,KAXD;AAYD,GAvBD;;AAyBA,MAAI,OAAOQ,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,GAA5C,EAAiD;AAC/CD,WAAO,EAAP,EAAW,YAAW;AACpB,aAAOnB,IAAP;AACD,KAFD,EAD+C,CAG3C;AACL,GAJD,MAIO,IAAI,OAAOqB,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,OAA5C,EAAqD;AAC1DD,WAAOC,OAAP,GAAiBtB,IAAjB,CAD0D,CACnC;AACxB,GAFM,MAEA;AACLD,YAAQwB,SAAR,GAAoBvB,IAApB,CADK,CACqB;AAC3B;AACF,CApCD,EAoCG,IApCH","file":"index.js","sourcesContent":["// async-each MIT license (by Paul Miller from https://paulmillr.com).\n(function(globals) {\n  'use strict';\n  var each = function(items, next, callback) {\n    if (!Array.isArray(items)) throw new TypeError('each() expects array as first argument');\n    if (typeof next !== 'function') throw new TypeError('each() expects function as second argument');\n    if (typeof callback !== 'function') callback = Function.prototype; // no-op\n\n    if (items.length === 0) return callback(undefined, items);\n\n    var transformed = new Array(items.length);\n    var count = 0;\n    var returned = false;\n\n    items.forEach(function(item, index) {\n      next(item, function(error, transformedItem) {\n        if (returned) return;\n        if (error) {\n          returned = true;\n          return callback(error);\n        }\n        transformed[index] = transformedItem;\n        count += 1;\n        if (count === items.length) return callback(undefined, transformed);\n      });\n    });\n  };\n\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function() {\n      return each;\n    }); // RequireJS\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = each; // CommonJS\n  } else {\n    globals.asyncEach = each; // <script>\n  }\n})(this);\n"]}